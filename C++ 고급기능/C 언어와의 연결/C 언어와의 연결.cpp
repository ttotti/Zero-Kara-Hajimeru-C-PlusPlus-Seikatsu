#include <iostream>

using namespace std;

// Func 함수가 위치한 파일 이름이 a.c 라는 점에 주목할 필요가 있다
// 여기서 확장자 .c 는 C 언어로 작성한 소스 파일을 의미한다
// 비주얼 스튜디오는 .c 인 소스파일은 C 언어의 방식으로 컴파일하고
// .cpp 인 소스파일은 C++ 언어의 방식으로 컴파일 한다

// 또한 C 와 C++ 은 함수의 이름을 내부적으로 보관하는 방법이 다르다
// 다음의 표는 Func() 함수의 이름을 내부적으로 어떻게 보관하는지를 보여준다
//-----------------------------------------------
// 함수의 원형		C 언어		C++ 언어		-
// void Func()		_Func		?Func@@YAXXZ	-
//-----------------------------------------------

// C++ 의 경우에는 오버로딩과 같은 기능을 제공하기 위해서 함수의 종류나 인자들에 대한 정보를 포함하고 있다
// 반면에 C의 경우 순수하게 함수 이름만 포함하고 있다
// 그래서 소스 코드상으로는 Func() 이지만 a.c에서는 _Func 라는 이름의 함수를 제공한 셈이고
// .cpp 에서는 ?Func@@YAXXZ 라는 이름의 함수를 찾은 셈이다

// 컴파일 이란
// 소스 코드를 실행 파일로 만드는 작업의 일부를 컴파일이라고 부른다
// 컴파일은 일종의 번역 작업이라고 생각할 수 있다
// 컴퓨터는 C++ 언어를 이해할 수 없으므로 C++로 작성한 소스 코드를 컴퓨터가 이해할 수 있는 기계어로 번역해줄 필요가 있다
// 한국어를 영어로 번역하는 것과 일본어를 영어로 번역하는 방법이 다르듯이
// C 언어의 방식으로 컴파일 하는 것과 C++ 언어의 방식으로 컴파일 하는 방법도 다르게 된다


// 이 문제를 해결하기 위해 다음과 같이 고치면 된다
// extern "C" void Func();
// extern "C" 키워드를 사용해서 원형을 정의하면 컴퓨터야 C 언어로 작성한 Func()라는 함수가 있는데 이 함수를 사용하고 싶단다 와 같은 의미가 된다
// 그렇기 때문에 컴퓨터는 올바른 함수를 찾아서 연결시켜 줄 수 있게 된다

void Func();
//extern "C" void Func();

int main()
{
	Func(); // 오류
	
	return 0;
}