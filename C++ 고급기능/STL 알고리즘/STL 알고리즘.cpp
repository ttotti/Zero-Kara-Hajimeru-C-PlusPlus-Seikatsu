#include <algorithm> // sort() 함수를 사용하기 위해 algorithm 헤더파일을 포함시켰고
#include <vector> // vector 클래스를 사용하기 위해 vector 헤더 파일을 포함시켰다
#include <iostream>

// STL 알고리즘(Algorithms)이란 STL에서 제공하는 함수들을 의미한다
// 예를 들어 정렬(Sorting) 이나 검색(Searching)과 같은 알고리즘을 구현해놓은 함수들을 생각해볼 수 있다

int main()
{
	// 동적 배열을 생성해서 임의의 영문자를 추가한다
	// char 타입의 값을 보관할 수 있는 vector 객체를 생성한다
	std::vector<char> vec;
	// 'a' 에서 'e' 사이의 문자를 밈의의 순서로 동적인 vector 객체에 삽입한다
	// list 클래스와 사용법이 동일하다는 것을 알 수 있다
	vec.push_back('e');
	vec.push_back('b');
	vec.push_back('a');
	vec.push_back('d');
	vec.push_back('c');

	// sort() 함수를 사용해서 정렬한다
	std::sort(vec.begin(), vec.end());

	// 정렬 후 상태를 출력한다
	// 역시 list 클래스와 동일한 방법으로 사용할 수 있다
	std::cout << "vector 정렬 후\n";
	std::vector<char>::iterator it;
	for (it = vec.begin(); it != vec.end(); it++)
		std::cout << *it;

	// 이번에는 배열을 정렬해보자
	// 임의의 문자열을 넣은 배열을 만든다
	char arr[5] = { 'd','c','b','a','e' };

	// sort() 함수를 사용해서 정렬한다
	// sort() 함수를 사용해서 평범한 배열까지도 정렬할 수 있다
	std::sort(arr, arr + 5);

	// 정렬 후 상태를 출력한다
	// vector 클래스를 비롯한 컨테이너 클래스의 사용 방법이 평범한 배열과 매우 닮아있음을 보여주기 위해서
	// 일반적인 배열을 STL 컨테이너와 유사한 방법으로 탐색하느 코드를 작성해보았다
	std::cout << "\n\n배열 정렬 후\n";
	for (char* p = arr; p != arr + 5; ++p)
		std::cout << *p;

	std::cout << "\n";

	return 0;
}

// 위 코드에서 실제로 정렬을 수행하는 코드는 두 줄 밖에 없다
// 배열의 첫번째 원소와 마지막 원소의 위치만 넘겨주면 sort() 함수가 알아서 정렬해준다
// 예제에서 vector 클래스를 사용했는데 list 클래스와 비교했을 때 사용상의 차이점이 전혀 없다는 것을 알 수 있다
// 더욱 재미있는 것은 일반적인 배열까지도 STL의 컨테니너와 유사한 방식으로 다룰 수 있다는 점이다
// 이 부분에서도 STL 의 철학을 볼 수 있는데 정보를 담는 컨테이너와 정보를 처리하는 알고리즘이 서로 독립적이다
// 예를 들어 sort()함수는 어느 한 컨테이너에 특화된 것이 아니라 모든 컨테이너를 다룰 수 있게 범용적으로 만들어졌다
// 이런 특징은 제너릭 프로그래밍 이라는 관점에서 알아볼수있다 (제너릭 프로그램에 대해서는 인터넷과 책868p 를 참고한다)
// 또한 STL 알고리즘은 다양한 알고리즘을 제공한다 (자세한건 인터넷과 책867p를 참고한다)

// 주의
// list 클래스는 sort() 함수를 사용할 수 없다
// sort() 함수는 어떤 컨테이너라도 다룰 수 있게 구현되어 있다고 말했지만
// 100% 맞는 말은 아니다 이는 컨테이너마다 물리적인 차이점을 가지고 있기 때문인데
// 예를 들어 링크드 리스트를 구현하고 있는 list 클래스는 링크드 리스트라는 물리적인 특징 때문에 a[2]처럼 직접적으로 노드에 접근할 수가 없다
// 대신에 '헤드 노드의 다음 다음 노드' 라는 식으로 밖에 접근할 수 없다
// STL의 컨테이너들은 거의 동일한 인터페이스를 가지고 있지만 이런 물리적인 제약으로 인해서
// 약간의 차이를 가지고 잇는 것이 사실이다
// 이런 경우에는 컨테이너에 특화된 알고리즘 함수를 사용할 수가 있는데
// list 클래스의 경우에는 링크드 리스트에 적합하게 구현된 sort() 함수를 멤버 함수로 가지고 있다
// list 클래스를 정렬하려면 이 sort() 함수를 사용해야 한다
